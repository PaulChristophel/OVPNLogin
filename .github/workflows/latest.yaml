name: Latest Release

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - 'v[0-9]*.[0-9]*.[0-9]*'
      - 'v[0-9]*.[0-9]*.[0-9]*-[a-zA-Z]*.*'
      - 'v[0-9]*.[0-9]*.[0-9]*-[a-zA-Z]*.[0-9]*.*'
  schedule:
    - cron: "0 10 * * 5"

jobs:
  build-ovpn_login-dev:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "BUILD=${GITHUB_REF:10}" | tee -a $GITHUB_ENV
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Build ovpn_login
      run: |
        podman pull golang:alpine
        podman pull alpine:edge
        podman pull docker.io/alpine/k8s:1.28.3
        podman build -f Dockerfile --build-arg BUILD=${{ env.SHORT_SHA }} . --target=app \
                     -t docker.io/pcm0/openvpn:latest-alpine \
                     -t docker.io/pcm0/openvpn:${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/openvpn:latest \
                     -t docker.io/pcm0/openvpn:${{ env.BUILD }} \
                     -t docker.io/pcm0/openvpn:${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/openvpn:latest-alpine \
                     -t $ACR_URL/pmartin47/openvpn:${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/openvpn:latest \
                     -t $ACR_URL/pmartin47/openvpn:${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/openvpn:${{ env.SHORT_SHA }}-alpine
        podman build -f Dockerfile --build-arg BUILD=${{ env.SHORT_SHA }} . --target=slim \
                     -t docker.io/pcm0/openvpn:slim-alpine \
                     -t docker.io/pcm0/openvpn:${{ env.BUILD }}-slim-alpine \
                     -t docker.io/pcm0/openvpn:slim \
                     -t docker.io/pcm0/openvpn:${{ env.BUILD }}-slim \
                     -t docker.io/pcm0/openvpn:${{ env.SHORT_SHA }}-slim-alpine \
                     -t $ACR_URL/pmartin47/openvpn:slim-alpine \
                     -t $ACR_URL/pmartin47/openvpn:${{ env.BUILD }}-slim-alpine \
                     -t $ACR_URL/pmartin47/openvpn:slim \
                     -t $ACR_URL/pmartin47/openvpn:${{ env.BUILD }}-slim \
                     -t $ACR_URL/pmartin47/openvpn:${{ env.SHORT_SHA }}-slim-alpine
        podman run -d --name ovpn_login docker.io/pcm0/openvpn sleep 1000
        podman cp ovpn_login:/var/lib/openvpn/ovpn_login .
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
    - name: Docker System Prune
      run: |
        podman system prune --force --all
    - name: Create a Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "ovpn_login"
        #bodyFile: "body.md"
        #token: ${{ secrets.RELEASE_TOKEN }}
        name:  ${{ github.ref_name }} 
        body: |+
          CHANGELOG:
          ${{ github.event.head_commit.message }}
          To download this release:
          podman pull docker.io/pcm0/openvpn
          Or to specify a build:
          podman pull docker.io/pcm0/openvpn:latest-alpine
          podman pull docker.io/pcm0/openvpn:slim-alpine
          podman pull docker.io/pcm0/openvpn:${{ env.BUILD }}-alpine
          podman pull docker.io/pcm0/openvpn:${{ env.BUILD }}-slim-alpine
